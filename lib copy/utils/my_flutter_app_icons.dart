/// Flutter icons MyFlutterApp
/// Copyright (C) 2021 by original authors @ fluttericon.com, fontello.com
/// This font was generated by FlutterIcon.com, which is derived from Fontello.
///
/// To use this font, place it in your fonts/ directory and include the
/// following in your pubspec.yaml
///
/// flutter:
///   fonts:
///    - family:  MyFlutterApp
///      fonts:
///       - asset: fonts/MyFlutterApp.ttf
///
/// 
/// * Font Awesome 5, Copyright (C) 2016 by Dave Gandy
///         Author:    Dave Gandy
///         License:   SIL (https://github.com/FortAwesome/Font-Awesome/blob/master/LICENSE.txt)
///         Homepage:  http://fortawesome.github.com/Font-Awesome/
/// * Font Awesome 4, Copyright (C) 2016 by Dave Gandy
///         Author:    Dave Gandy
///         License:   SIL ()
///         Homepage:  http://fortawesome.github.com/Font-Awesome/
/// * Elusive, Copyright (C) 2013 by Aristeides Stathopoulos
///         Author:    Aristeides Stathopoulos
///         License:   SIL (http://scripts.sil.org/OFL)
///         Homepage:  http://aristeides.com/
/// * Octicons, Copyright (C) 2020 by GitHub Inc.
///         Author:    GitHub
///         License:   MIT (http://opensource.org/licenses/mit-license.php)
///         Homepage:  https://primer.style/octicons/
///
import 'package:flutter/widgets.dart';

class MyFlutterApp {
  MyFlutterApp._();

  static const _kFontFam = 'MyFlutterApp';
  static const String? _kFontPkg = null;

  static const IconData braille_1 = IconData(0xe800, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData picture = IconData(0xe801, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData camera = IconData(0xe802, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData logout = IconData(0xe803, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData history_2 = IconData(0xe804, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData braille_2 = IconData(0xe805, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData qrcode = IconData(0xf029, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData barcode = IconData(0xf02a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData expand = IconData(0xf065, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData compress = IconData(0xf066, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData angle_double_right = IconData(0xf101, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData dollar = IconData(0xf155, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData gg = IconData(0xf260, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData calendar_times = IconData(0xf273, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData braille = IconData(0xf2a1, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData sign_out_alt = IconData(0xf2f5, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData sign_out = IconData(0xf339, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData fingerprint = IconData(0xf577, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData slash = IconData(0xf715, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData grip_lines = IconData(0xf7a4, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData grip_lines_vertical = IconData(0xf7a5, fontFamily: _kFontFam, fontPackage: _kFontPkg);
}
